/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbproject;

import javax.swing.*;

/**
 * @author Mutahhar BM
 */
public class InsertInstructor extends javax.swing.JFrame {
    FromDB instanceOfDB = new FromDB();
    TableUI table = new TableUI();

    /**
     * Creates new form InsertStudent
     */
    public InsertInstructor() {
        initComponents();
        instanceOfDB.setConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        studentPane = new javax.swing.JPanel();
        instructorIdLabel = new javax.swing.JLabel();
        instructorId = new javax.swing.JTextField();
        studentPane2 = new javax.swing.JPanel();
        instructorNameLabel = new javax.swing.JLabel();
        instructorName = new javax.swing.JTextField();
        studentPane8 = new javax.swing.JPanel();
        salaryLabel = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        studentPane9 = new javax.swing.JPanel();
        departmentLabel = new javax.swing.JLabel();
        department = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        studentPane10 = new javax.swing.JPanel();
        semesterLabel = new javax.swing.JLabel();
        semester = new javax.swing.JTextField();
        studentPane11 = new javax.swing.JPanel();
        sectionLabel = new javax.swing.JLabel();
        section = new javax.swing.JTextField();
        studentPane12 = new javax.swing.JPanel();
        programLabel = new javax.swing.JLabel();
        program = new javax.swing.JTextField();
        listButton = new javax.swing.JButton();
        studentPane1 = new javax.swing.JPanel();
        courseCodeLabel = new javax.swing.JLabel();
        courseCode = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Instructor");
        setAlwaysOnTop(true);

        studentPane.setLayout(null);

        instructorIdLabel.setText("Instructor Id:");
        studentPane.add(instructorIdLabel);
        instructorIdLabel.setBounds(0, 10, 70, 14);
        studentPane.add(instructorId);
        instructorId.setBounds(80, 7, 101, 25);

        studentPane2.setLayout(null);

        instructorNameLabel.setText("Instructor Name:");
        studentPane2.add(instructorNameLabel);
        instructorNameLabel.setBounds(5, 10, 90, 14);
        studentPane2.add(instructorName);
        instructorName.setBounds(106, 7, 101, 25);

        salaryLabel.setText("Salary:");

        javax.swing.GroupLayout studentPane8Layout = new javax.swing.GroupLayout(studentPane8);
        studentPane8.setLayout(studentPane8Layout);
        studentPane8Layout.setHorizontalGroup(
                studentPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane8Layout.createSequentialGroup()
                                .addComponent(salaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        studentPane8Layout.setVerticalGroup(
                studentPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane8Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(studentPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(salaryLabel)
                                        .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        departmentLabel.setText("Department Name:");

        javax.swing.GroupLayout studentPane9Layout = new javax.swing.GroupLayout(studentPane9);
        studentPane9.setLayout(studentPane9Layout);
        studentPane9Layout.setHorizontalGroup(
                studentPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane9Layout.createSequentialGroup()
                                .addComponent(departmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(department, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addContainerGap())
        );
        studentPane9Layout.setVerticalGroup(
                studentPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(departmentLabel)
                                        .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        studentPane10.setLayout(null);

        semesterLabel.setText("Semester:");
        studentPane10.add(semesterLabel);
        semesterLabel.setBounds(4, 14, 73, 14);
        studentPane10.add(semester);
        semester.setBounds(110, 10, 100, 25);

        sectionLabel.setText("Section:");

        javax.swing.GroupLayout studentPane11Layout = new javax.swing.GroupLayout(studentPane11);
        studentPane11.setLayout(studentPane11Layout);
        studentPane11Layout.setHorizontalGroup(
                studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane11Layout.createSequentialGroup()
                                .addComponent(sectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentPane11Layout.setVerticalGroup(
                studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane11Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sectionLabel)
                                        .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        programLabel.setText("Program:");

        javax.swing.GroupLayout studentPane12Layout = new javax.swing.GroupLayout(studentPane12);
        studentPane12.setLayout(studentPane12Layout);
        studentPane12Layout.setHorizontalGroup(
                studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane12Layout.createSequentialGroup()
                                .addComponent(programLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentPane12Layout.setVerticalGroup(
                studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane12Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(programLabel)
                                        .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        listButton.setText("List");
        listButton.setMaximumSize(new java.awt.Dimension(65, 28));
        listButton.setMinimumSize(new java.awt.Dimension(65, 28));
        listButton.setPreferredSize(new java.awt.Dimension(65, 28));
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });

        courseCodeLabel.setText("Course Code:");

        javax.swing.GroupLayout studentPane1Layout = new javax.swing.GroupLayout(studentPane1);
        studentPane1.setLayout(studentPane1Layout);
        studentPane1Layout.setHorizontalGroup(
                studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane1Layout.createSequentialGroup()
                                .addComponent(courseCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        studentPane1Layout.setVerticalGroup(
                studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(courseCodeLabel))
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(listButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(insertButton)
                                .addGap(0, 90, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(studentPane9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(studentPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(studentPane10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(studentPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(studentPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2)
                                                .addComponent(studentPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(studentPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(studentPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(studentPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(listButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(updateButton)
                                                        .addComponent(insertButton))
                                                .addGap(36, 36, 36))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(deleteButton)
                                                .addGap(55, 55, 55))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        // TODO add your handling code here:
        //Insert all info
        if (!instructorId.getText().equals("") && !instructorName.getText().equals("") && !salary.getText().equals("") &&
                !department.getText().equals("") && !section.getText().equals("") && !semester.getText().equals("") &&
                !program.getText().equals("") && !courseCode.getText().equals("")) {
            instanceOfDB.insertInstructor(Integer.parseInt(instructorId.getText()), instructorName.getText(),
                    Integer.parseInt(salary.getText()), department.getText(), section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), courseCode.getText());
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");

        }
        //Insert Section
        else  if (!instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && !section.getText().equals("") && !semester.getText().equals("") &&
                !program.getText().equals("") && courseCode.getText().equals("")){
            System.out.println("wekjwejfwecwe");
            instanceOfDB.insertInstructorTeachesSection(Integer.parseInt(instructorId.getText()),section.getText()
            ,Integer.parseInt(semester.getText()),program.getText());
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");
        }
        //insert course
        else  if (!instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && section.getText().equals("") && semester.getText().equals("") &&
                program.getText().equals("") && !courseCode.getText().equals("")){
            instanceOfDB.insertInstructorTeachesCourse(Integer.parseInt(instructorId.getText()),courseCode.getText());
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");
        }

        else {
            JOptionPane.showMessageDialog(null, "All Fields must be filled!", "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (salary.getText().equals("") || semester.getText().equals("")) {

            if (salary.getText().equals("") && semester.getText().equals("")) {
                instanceOfDB.updateInstructor(Integer.parseInt(instructorId.getText()), instructorName.getText(),
                        0, department.getText(), section.getText(),
                        0, program.getText(), courseCode.getText());
            } else if (semester.getText().equals("")) {
                instanceOfDB.updateInstructor(Integer.parseInt(instructorId.getText()), instructorName.getText(),
                        Integer.parseInt(salary.getText()), department.getText(), section.getText(),
                        0, program.getText(), courseCode.getText());
            }else if (salary.getText().equals("")) {
                instanceOfDB.updateInstructor(Integer.parseInt(instructorId.getText()), instructorName.getText(),
                        0, department.getText(), section.getText(),
                        Integer.parseInt(semester.getText()), program.getText(), courseCode.getText());
            }

        } else {
            instanceOfDB.updateInstructor(Integer.parseInt(instructorId.getText()), instructorName.getText(),
                    Integer.parseInt(salary.getText()), department.getText(), section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), courseCode.getText());
        }
        instructorId.setText("");
        instructorName.setText("");
        salary.setText("");
        department.setText("");
        section.setText("");
        semester.setText("");
        program.setText("");
        courseCode.setText("");
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (!instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && section.getText().equals("") && semester.getText().equals("") &&
                program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.deleteInstructor(Integer.parseInt(instructorId.getText()));
        }
        //delete section
        else  if (!instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && !section.getText().equals("") && !semester.getText().equals("") &&
                !program.getText().equals("") && courseCode.getText().equals("")){
            System.out.println("wekjwejfwecwe");
            instanceOfDB.deleteInstructorTeachesSection(Integer.parseInt(instructorId.getText()),section.getText()
                    ,Integer.parseInt(semester.getText()),program.getText());
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");
        }
        //delete course
        else  if (!instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && section.getText().equals("") && semester.getText().equals("") &&
                program.getText().equals("") && !courseCode.getText().equals("")){
            instanceOfDB.deleteInstructorTeachesCourse(Integer.parseInt(instructorId.getText()),courseCode.getText());
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");
        }

        else {
            JOptionPane.showMessageDialog(null, "Instructor ID must not be empty!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        instructorId.setText("");
        instructorName.setText("");
        salary.setText("");
        department.setText("");
        section.setText("");
        semester.setText("");
        program.setText("");
        courseCode.setText("");
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
        // TODO add your handling code here:
        if (instructorId.getText().equals("") && instructorName.getText().equals("") && salary.getText().equals("") &&
                department.getText().equals("") && section.getText().equals("") && semester.getText().equals("") &&
                program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.selectAllInstructor(table.getTable());
            table.getTypeLabel().setText("All Instructors");
            table.getTypeLabel().setBounds(490, 18, 90, 28);
            table.getTypeTextField().setVisible(false);
            table.setVisible(true);
            instructorId.setText("");
            instructorName.setText("");
            salary.setText("");
            department.setText("");
            section.setText("");
            semester.setText("");
            program.setText("");
            courseCode.setText("");

        }

    }//GEN-LAST:event_listButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertInstructor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertInstructor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField courseCode;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField department;
    private javax.swing.JLabel departmentLabel;
    private javax.swing.JButton insertButton;
    private javax.swing.JTextField instructorId;
    private javax.swing.JLabel instructorIdLabel;
    private javax.swing.JTextField instructorName;
    private javax.swing.JLabel instructorNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listButton;
    private javax.swing.JTextField program;
    private javax.swing.JLabel programLabel;
    private javax.swing.JTextField salary;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JTextField section;
    private javax.swing.JLabel sectionLabel;
    private javax.swing.JTextField semester;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JPanel studentPane;
    private javax.swing.JPanel studentPane1;
    private javax.swing.JPanel studentPane10;
    private javax.swing.JPanel studentPane11;
    private javax.swing.JPanel studentPane12;
    private javax.swing.JPanel studentPane2;
    private javax.swing.JPanel studentPane8;
    private javax.swing.JPanel studentPane9;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
