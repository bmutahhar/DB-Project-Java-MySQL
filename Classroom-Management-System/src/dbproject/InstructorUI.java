/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbproject;

/**
 * @author Mutahhar BM
 */
public class InstructorUI extends javax.swing.JFrame {
    FromDB instanceOfDB = new FromDB();
    TableUI table = new TableUI();
    private static Login log = new Login();

    /**
     * Creates new form InsertStudent
     */
    public InstructorUI() {
        initComponents();
        instanceOfDB.setConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        studentPane = new javax.swing.JPanel();
        instructorIdLabel = new javax.swing.JLabel();
        instructorId = new javax.swing.JTextField();
        studentPane2 = new javax.swing.JPanel();
        instructorNameLabel = new javax.swing.JLabel();
        instructorName = new javax.swing.JTextField();
        ListButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        studentPane10 = new javax.swing.JPanel();
        semesterLabel = new javax.swing.JLabel();
        semester = new javax.swing.JTextField();
        studentPane11 = new javax.swing.JPanel();
        sectionLabel = new javax.swing.JLabel();
        section = new javax.swing.JTextField();
        studentPane12 = new javax.swing.JPanel();
        programLabel = new javax.swing.JLabel();
        program = new javax.swing.JTextField();
        studentPane1 = new javax.swing.JPanel();
        courseCodeLabel = new javax.swing.JLabel();
        courseCode = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        usertype = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Instructor UI");
        setAlwaysOnTop(true);

        studentPane.setLayout(null);

        instructorIdLabel.setText("Instructor Id:");
        studentPane.add(instructorIdLabel);
        instructorIdLabel.setBounds(0, 10, 70, 14);
        studentPane.add(instructorId);
        instructorId.setBounds(80, 5, 101, 25);

        studentPane2.setLayout(null);

        instructorNameLabel.setText("Instructor Name:");
        studentPane2.add(instructorNameLabel);
        instructorNameLabel.setBounds(5, 10, 93, 14);
        studentPane2.add(instructorName);
        instructorName.setBounds(100, 4, 98, 25);

        ListButton.setText("List");
        ListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        semesterLabel.setText("Semester:");

        javax.swing.GroupLayout studentPane10Layout = new javax.swing.GroupLayout(studentPane10);
        studentPane10.setLayout(studentPane10Layout);
        studentPane10Layout.setHorizontalGroup(
                studentPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane10Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(semesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        studentPane10Layout.setVerticalGroup(
                studentPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane10Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(studentPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(semesterLabel)
                                        .addComponent(semester, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
        );

        sectionLabel.setText("Section:");

        javax.swing.GroupLayout studentPane11Layout = new javax.swing.GroupLayout(studentPane11);
        studentPane11.setLayout(studentPane11Layout);
        studentPane11Layout.setHorizontalGroup(
                studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane11Layout.createSequentialGroup()
                                .addComponent(sectionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentPane11Layout.setVerticalGroup(
                studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane11Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(studentPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(sectionLabel)
                                        .addComponent(section, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        programLabel.setText("Program:");

        javax.swing.GroupLayout studentPane12Layout = new javax.swing.GroupLayout(studentPane12);
        studentPane12.setLayout(studentPane12Layout);
        studentPane12Layout.setHorizontalGroup(
                studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane12Layout.createSequentialGroup()
                                .addComponent(programLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentPane12Layout.setVerticalGroup(
                studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane12Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(studentPane12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(programLabel)
                                        .addComponent(program, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        courseCodeLabel.setText("Course Code:");

        javax.swing.GroupLayout studentPane1Layout = new javax.swing.GroupLayout(studentPane1);
        studentPane1.setLayout(studentPane1Layout);
        studentPane1Layout.setHorizontalGroup(
                studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane1Layout.createSequentialGroup()
                                .addComponent(courseCodeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        studentPane1Layout.setVerticalGroup(
                studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(studentPane1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(studentPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(courseCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(courseCodeLabel)))
        );

        jLabel1.setText("Username: ");
        username.setText("Sir");

        jLabel2.setText("User Type:");

        usertype.setEditable(false);
        username.setEditable(false);
        usertype.setText("Instructor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(studentPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(studentPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(studentPane10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(ListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(44, 44, 44))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(266, 266, 266)
                                .addComponent(usertype, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(usertype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(studentPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(studentPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ListButton)
                                        .addComponent(clearButton))
                                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(), 0, program.getText(), table.getTable());
            table.getTypeLabel().setText("All Time Slots");
            table.getTypeLabel().setBounds(490, 18, 90, 28);
            table.getTypeTextField().setVisible(false);
            table.setVisible(true);
        } else if (!instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructor("instructor", "instructor_id",
                    instructorId.getText(), table.getTable());
            table.getTypeLabel().setText("Instructor Name: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(instanceOfDB.selectNames("name", "instructor",
                    "instructor_id", instructorId.getText()));
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            instructorId.setText("");

        } else if (instructorId.getText().equals("") && !instructorName.getText().equals("") && section.getText().equals("") &&
                semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructor("instructor", "name",
                    instructorName.getText(), table.getTable());
            table.getTypeLabel().setText("Instructor Name: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(instructorName.getText());
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            instructorName.setText("");
        } else if (instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                semester.getText().equals("") && program.getText().equals("") && !courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructor("course", "course_id", courseCode.getText(), table.getTable());
            table.getTypeLabel().setText("Course Name: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(instanceOfDB.selectNames("title", "course", "course_id", courseCode.getText()));
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            courseCode.setText("");
        } else if (instructorId.getText().equals("") && instructorName.getText().equals("") && !section.getText().equals("") &&
                semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(), 0, program.getText(), table.getTable());
            table.getTypeLabel().setText("Section: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(section.getText());
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            section.setText("");
        } else if (instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                !semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), table.getTable());
            table.getTypeLabel().setText("Semester: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(semester.getText());
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            semester.setText("");
        }
        else if (instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                semester.getText().equals("") && !program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(),
                    0, program.getText(), table.getTable());
            table.getTypeLabel().setText("Program: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(program.getText());
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            program.setText("");
        }

        else if (instructorId.getText().equals("") && instructorName.getText().equals("") && !section.getText().equals("") &&
                !semester.getText().equals("") && program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), table.getTable());
            table.getTypeLabel().setText("Semester and Section: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText((semester.getText() + section.getText()));
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            section.setText("");
            semester.setText("");
        } else if (instructorId.getText().equals("") && instructorName.getText().equals("") && section.getText().equals("") &&
                !semester.getText().equals("") && !program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), table.getTable());
            table.getTypeLabel().setText("Semester and Program: ");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText((semester.getText() + " " + program.getText()));
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            semester.setText("");
            program.setText("");
        } else if (instructorId.getText().equals("") && instructorName.getText().equals("") && !section.getText().equals("") &&
                !semester.getText().equals("") && !program.getText().equals("") && courseCode.getText().equals("")) {
            instanceOfDB.displayTimeSlotsForInstructorUsingMultipleValues(section.getText(),
                    Integer.parseInt(semester.getText()), program.getText(), table.getTable());
            table.getTypeLabel().setText("Semester Section and Program:");
            table.getTypeLabel().setBounds(330, 18, 100, 35);
            table.getTypeTextField().setText(((semester.getText() + section.getText()) + " " + program.getText()));
            table.getTypeTextField().setVisible(true);
            table.setVisible(true);
            section.setText("");
            semester.setText("");
            program.setText("");
        }
    }

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {
        instructorId.setText("");
        instructorName.setText("");
        section.setText("");
        semester.setText("");
        program.setText("");
        courseCode.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InstructorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InstructorUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ListButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField courseCode;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JTextField instructorId;
    private javax.swing.JLabel instructorIdLabel;
    private javax.swing.JTextField instructorName;
    private javax.swing.JLabel instructorNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField program;
    private javax.swing.JLabel programLabel;
    private javax.swing.JTextField section;
    private javax.swing.JLabel sectionLabel;
    private javax.swing.JTextField semester;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JPanel studentPane;
    private javax.swing.JPanel studentPane1;
    private javax.swing.JPanel studentPane10;
    private javax.swing.JPanel studentPane11;
    private javax.swing.JPanel studentPane12;
    private javax.swing.JPanel studentPane2;
    private javax.swing.JTextField username;
    private javax.swing.JTextField usertype;
    // End of variables declaration//GEN-END:variables
}
